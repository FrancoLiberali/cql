// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	goembedded "github.com/ditrit/badaas-cli/cmd/gen/conditions/tests/goembedded"
	condition "github.com/ditrit/badaas/orm/condition"
	model "github.com/ditrit/badaas/orm/model"
	operator "github.com/ditrit/badaas/orm/operator"
	query "github.com/ditrit/badaas/orm/query"
	"reflect"
	"time"
)

var goEmbeddedType = reflect.TypeOf(*new(goembedded.GoEmbedded))
var GoEmbeddedIdField = query.FieldIdentifier[model.UIntID]{
	Field:     "ID",
	ModelType: goEmbeddedType,
}

func GoEmbeddedId(operator operator.Operator[model.UIntID]) condition.WhereCondition[goembedded.GoEmbedded] {
	return condition.NewFieldCondition[goembedded.GoEmbedded, model.UIntID](GoEmbeddedIdField, operator)
}

var GoEmbeddedCreatedAtField = query.FieldIdentifier[time.Time]{
	Field:     "CreatedAt",
	ModelType: goEmbeddedType,
}

func GoEmbeddedCreatedAt(operator operator.Operator[time.Time]) condition.WhereCondition[goembedded.GoEmbedded] {
	return condition.NewFieldCondition[goembedded.GoEmbedded, time.Time](GoEmbeddedCreatedAtField, operator)
}

var GoEmbeddedUpdatedAtField = query.FieldIdentifier[time.Time]{
	Field:     "UpdatedAt",
	ModelType: goEmbeddedType,
}

func GoEmbeddedUpdatedAt(operator operator.Operator[time.Time]) condition.WhereCondition[goembedded.GoEmbedded] {
	return condition.NewFieldCondition[goembedded.GoEmbedded, time.Time](GoEmbeddedUpdatedAtField, operator)
}

var GoEmbeddedDeletedAtField = query.FieldIdentifier[time.Time]{
	Field:     "DeletedAt",
	ModelType: goEmbeddedType,
}

func GoEmbeddedDeletedAt(operator operator.Operator[time.Time]) condition.WhereCondition[goembedded.GoEmbedded] {
	return condition.NewFieldCondition[goembedded.GoEmbedded, time.Time](GoEmbeddedDeletedAtField, operator)
}

var GoEmbeddedIntField = query.FieldIdentifier[int]{
	Field:     "Int",
	ModelType: goEmbeddedType,
}

func GoEmbeddedInt(operator operator.Operator[int]) condition.WhereCondition[goembedded.GoEmbedded] {
	return condition.NewFieldCondition[goembedded.GoEmbedded, int](GoEmbeddedIntField, operator)
}

var GoEmbeddedToBeEmbeddedIntField = query.FieldIdentifier[int]{
	Field:     "Int",
	ModelType: goEmbeddedType,
}

func GoEmbeddedToBeEmbeddedInt(operator operator.Operator[int]) condition.WhereCondition[goembedded.GoEmbedded] {
	return condition.NewFieldCondition[goembedded.GoEmbedded, int](GoEmbeddedToBeEmbeddedIntField, operator)
}

var GoEmbeddedPreloadAttributes = condition.NewPreloadCondition[goembedded.GoEmbedded](GoEmbeddedIdField, GoEmbeddedCreatedAtField, GoEmbeddedUpdatedAtField, GoEmbeddedDeletedAtField, GoEmbeddedIntField, GoEmbeddedToBeEmbeddedIntField)
