// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	package1 "github.com/ditrit/badaas-orm/cli/cmd/gen/conditions/tests/multiplepackage/package1"
	package2 "github.com/ditrit/badaas-orm/cli/cmd/gen/conditions/tests/multiplepackage/package2"
	orm "github.com/ditrit/badaas/orm"
	gorm "gorm.io/gorm"
	"time"
)

func Package1Id(v orm.UUID) orm.WhereCondition[package1.Package1] {
	return orm.WhereCondition[package1.Package1]{
		Field: "ID",
		Value: v,
	}
}
func Package1CreatedAt(v time.Time) orm.WhereCondition[package1.Package1] {
	return orm.WhereCondition[package1.Package1]{
		Field: "CreatedAt",
		Value: v,
	}
}
func Package1UpdatedAt(v time.Time) orm.WhereCondition[package1.Package1] {
	return orm.WhereCondition[package1.Package1]{
		Field: "UpdatedAt",
		Value: v,
	}
}
func Package1DeletedAt(v gorm.DeletedAt) orm.WhereCondition[package1.Package1] {
	return orm.WhereCondition[package1.Package1]{
		Field: "DeletedAt",
		Value: v,
	}
}
func Package1Package2(conditions ...orm.Condition[package2.Package2]) orm.Condition[package1.Package1] {
	return orm.JoinCondition[package1.Package1, package2.Package2]{
		Conditions: conditions,
		T1Field:    "ID",
		T2Field:    "Package1ID",
	}
}
func Package2Package1(conditions ...orm.Condition[package1.Package1]) orm.Condition[package2.Package2] {
	return orm.JoinCondition[package2.Package2, package1.Package1]{
		Conditions: conditions,
		T1Field:    "Package1ID",
		T2Field:    "ID",
	}
}
