// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	belongsto "github.com/ditrit/badaas-cli/cmd/gen/conditions/tests/belongsto"
	condition "github.com/ditrit/badaas/orm/condition"
	model "github.com/ditrit/badaas/orm/model"
	operator "github.com/ditrit/badaas/orm/operator"
	query "github.com/ditrit/badaas/orm/query"
	"reflect"
	"time"
)

var ownerType = reflect.TypeOf(*new(belongsto.Owner))
var OwnerIdField = query.FieldIdentifier[model.UUID]{
	Field:     "ID",
	ModelType: ownerType,
}

func OwnerId(operator operator.Operator[model.UUID]) condition.WhereCondition[belongsto.Owner] {
	return condition.NewFieldCondition[belongsto.Owner, model.UUID](OwnerIdField, operator)
}

var OwnerCreatedAtField = query.FieldIdentifier[time.Time]{
	Field:     "CreatedAt",
	ModelType: ownerType,
}

func OwnerCreatedAt(operator operator.Operator[time.Time]) condition.WhereCondition[belongsto.Owner] {
	return condition.NewFieldCondition[belongsto.Owner, time.Time](OwnerCreatedAtField, operator)
}

var OwnerUpdatedAtField = query.FieldIdentifier[time.Time]{
	Field:     "UpdatedAt",
	ModelType: ownerType,
}

func OwnerUpdatedAt(operator operator.Operator[time.Time]) condition.WhereCondition[belongsto.Owner] {
	return condition.NewFieldCondition[belongsto.Owner, time.Time](OwnerUpdatedAtField, operator)
}

var OwnerDeletedAtField = query.FieldIdentifier[time.Time]{
	Field:     "DeletedAt",
	ModelType: ownerType,
}

func OwnerDeletedAt(operator operator.Operator[time.Time]) condition.WhereCondition[belongsto.Owner] {
	return condition.NewFieldCondition[belongsto.Owner, time.Time](OwnerDeletedAtField, operator)
}

var OwnerPreloadAttributes = condition.NewPreloadCondition[belongsto.Owner](OwnerIdField, OwnerCreatedAtField, OwnerUpdatedAtField, OwnerDeletedAtField)
