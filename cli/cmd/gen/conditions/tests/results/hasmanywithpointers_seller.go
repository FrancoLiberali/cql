// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	hasmanywithpointers "github.com/ditrit/badaas-orm/cli/cmd/gen/conditions/tests/hasmanywithpointers"
	orm "github.com/ditrit/badaas/orm"
	"time"
)

func SellerInPointersId(operator orm.Operator[orm.UUID]) orm.WhereCondition[hasmanywithpointers.SellerInPointers] {
	return orm.FieldCondition[hasmanywithpointers.SellerInPointers, orm.UUID]{
		FieldIdentifier: orm.IDFieldID,
		Operator:        operator,
	}
}
func SellerInPointersCreatedAt(operator orm.Operator[time.Time]) orm.WhereCondition[hasmanywithpointers.SellerInPointers] {
	return orm.FieldCondition[hasmanywithpointers.SellerInPointers, time.Time]{
		FieldIdentifier: orm.CreatedAtFieldID,
		Operator:        operator,
	}
}
func SellerInPointersUpdatedAt(operator orm.Operator[time.Time]) orm.WhereCondition[hasmanywithpointers.SellerInPointers] {
	return orm.FieldCondition[hasmanywithpointers.SellerInPointers, time.Time]{
		FieldIdentifier: orm.UpdatedAtFieldID,
		Operator:        operator,
	}
}
func SellerInPointersDeletedAt(operator orm.Operator[time.Time]) orm.WhereCondition[hasmanywithpointers.SellerInPointers] {
	return orm.FieldCondition[hasmanywithpointers.SellerInPointers, time.Time]{
		FieldIdentifier: orm.DeletedAtFieldID,
		Operator:        operator,
	}
}
func SellerInPointersCompany(conditions ...orm.Condition[hasmanywithpointers.CompanyWithPointers]) orm.IJoinCondition[hasmanywithpointers.SellerInPointers] {
	return orm.JoinCondition[hasmanywithpointers.SellerInPointers, hasmanywithpointers.CompanyWithPointers]{
		Conditions:         conditions,
		RelationField:      "Company",
		T1Field:            "CompanyID",
		T1PreloadCondition: SellerInPointersPreloadAttributes,
		T2Field:            "ID",
	}
}

var SellerInPointersPreloadCompany = SellerInPointersCompany(CompanyWithPointersPreloadAttributes)
var sellerInPointersCompanyIdFieldID = orm.FieldIdentifier{Field: "CompanyID"}

func SellerInPointersCompanyId(operator orm.Operator[orm.UUID]) orm.WhereCondition[hasmanywithpointers.SellerInPointers] {
	return orm.FieldCondition[hasmanywithpointers.SellerInPointers, orm.UUID]{
		FieldIdentifier: sellerInPointersCompanyIdFieldID,
		Operator:        operator,
	}
}

var SellerInPointersPreloadAttributes = orm.NewPreloadCondition[hasmanywithpointers.SellerInPointers](sellerInPointersCompanyIdFieldID)
var SellerInPointersPreloadRelations = []orm.Condition[hasmanywithpointers.SellerInPointers]{SellerInPointersPreloadCompany}
