// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	uintmodel "github.com/ditrit/badaas-cli/cmd/gen/conditions/tests/uintmodel"
	orm "github.com/ditrit/badaas/orm"
	condition "github.com/ditrit/badaas/orm/condition"
	model "github.com/ditrit/badaas/orm/model"
	query "github.com/ditrit/badaas/orm/query"
	"reflect"
	"time"
)

var uintModelType = reflect.TypeOf(*new(uintmodel.UintModel))

func (uintModelConditions uintModelConditions) IdIs() orm.FieldIs[uintmodel.UintModel, model.UIntID] {
	return orm.FieldIs[uintmodel.UintModel, model.UIntID]{FieldID: uintModelConditions.ID}
}
func (uintModelConditions uintModelConditions) CreatedAtIs() orm.FieldIs[uintmodel.UintModel, time.Time] {
	return orm.FieldIs[uintmodel.UintModel, time.Time]{FieldID: uintModelConditions.CreatedAt}
}
func (uintModelConditions uintModelConditions) UpdatedAtIs() orm.FieldIs[uintmodel.UintModel, time.Time] {
	return orm.FieldIs[uintmodel.UintModel, time.Time]{FieldID: uintModelConditions.UpdatedAt}
}
func (uintModelConditions uintModelConditions) DeletedAtIs() orm.FieldIs[uintmodel.UintModel, time.Time] {
	return orm.FieldIs[uintmodel.UintModel, time.Time]{FieldID: uintModelConditions.DeletedAt}
}

type uintModelConditions struct {
	ID        query.FieldIdentifier[model.UIntID]
	CreatedAt query.FieldIdentifier[time.Time]
	UpdatedAt query.FieldIdentifier[time.Time]
	DeletedAt query.FieldIdentifier[time.Time]
}

var UintModel = uintModelConditions{
	CreatedAt: query.FieldIdentifier[time.Time]{
		Field:     "CreatedAt",
		ModelType: uintModelType,
	},
	DeletedAt: query.FieldIdentifier[time.Time]{
		Field:     "DeletedAt",
		ModelType: uintModelType,
	},
	ID: query.FieldIdentifier[model.UIntID]{
		Field:     "ID",
		ModelType: uintModelType,
	},
	UpdatedAt: query.FieldIdentifier[time.Time]{
		Field:     "UpdatedAt",
		ModelType: uintModelType,
	},
}

// Preload allows preloading the UintModel when doing a query
func (uintModelConditions uintModelConditions) Preload() condition.Condition[uintmodel.UintModel] {
	return condition.NewPreloadCondition[uintmodel.UintModel](uintModelConditions.ID, uintModelConditions.CreatedAt, uintModelConditions.UpdatedAt, uintModelConditions.DeletedAt)
}
