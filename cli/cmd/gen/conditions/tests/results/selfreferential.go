// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	selfreferential "github.com/ditrit/badaas-cli/cmd/gen/conditions/tests/selfreferential"
	orm "github.com/ditrit/badaas/orm"
	"reflect"
	"time"
)

var employeeType = reflect.TypeOf(*new(selfreferential.Employee))
var EmployeeIdField = orm.FieldIdentifier[orm.UUID]{
	Field:     "ID",
	ModelType: employeeType,
}

func EmployeeId(operator orm.Operator[orm.UUID]) orm.WhereCondition[selfreferential.Employee] {
	return orm.FieldCondition[selfreferential.Employee, orm.UUID]{
		FieldIdentifier: EmployeeIdField,
		Operator:        operator,
	}
}

var EmployeeCreatedAtField = orm.FieldIdentifier[time.Time]{
	Field:     "CreatedAt",
	ModelType: employeeType,
}

func EmployeeCreatedAt(operator orm.Operator[time.Time]) orm.WhereCondition[selfreferential.Employee] {
	return orm.FieldCondition[selfreferential.Employee, time.Time]{
		FieldIdentifier: EmployeeCreatedAtField,
		Operator:        operator,
	}
}

var EmployeeUpdatedAtField = orm.FieldIdentifier[time.Time]{
	Field:     "UpdatedAt",
	ModelType: employeeType,
}

func EmployeeUpdatedAt(operator orm.Operator[time.Time]) orm.WhereCondition[selfreferential.Employee] {
	return orm.FieldCondition[selfreferential.Employee, time.Time]{
		FieldIdentifier: EmployeeUpdatedAtField,
		Operator:        operator,
	}
}

var EmployeeDeletedAtField = orm.FieldIdentifier[time.Time]{
	Field:     "DeletedAt",
	ModelType: employeeType,
}

func EmployeeDeletedAt(operator orm.Operator[time.Time]) orm.WhereCondition[selfreferential.Employee] {
	return orm.FieldCondition[selfreferential.Employee, time.Time]{
		FieldIdentifier: EmployeeDeletedAtField,
		Operator:        operator,
	}
}
func EmployeeBoss(conditions ...orm.Condition[selfreferential.Employee]) orm.IJoinCondition[selfreferential.Employee] {
	return orm.JoinCondition[selfreferential.Employee, selfreferential.Employee]{
		Conditions:         conditions,
		RelationField:      "Boss",
		T1Field:            "BossID",
		T1PreloadCondition: EmployeePreloadAttributes,
		T2Field:            "ID",
	}
}

var EmployeePreloadBoss = EmployeeBoss(EmployeePreloadAttributes)
var EmployeeBossIdField = orm.FieldIdentifier[orm.UUID]{
	Field:     "BossID",
	ModelType: employeeType,
}

func EmployeeBossId(operator orm.Operator[orm.UUID]) orm.WhereCondition[selfreferential.Employee] {
	return orm.FieldCondition[selfreferential.Employee, orm.UUID]{
		FieldIdentifier: EmployeeBossIdField,
		Operator:        operator,
	}
}

var EmployeePreloadAttributes = orm.NewPreloadCondition[selfreferential.Employee](EmployeeIdField, EmployeeCreatedAtField, EmployeeUpdatedAtField, EmployeeDeletedAtField, EmployeeBossIdField)
var EmployeePreloadRelations = []orm.Condition[selfreferential.Employee]{EmployeePreloadBoss}
