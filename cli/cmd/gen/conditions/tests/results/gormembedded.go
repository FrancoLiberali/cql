// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	gormembedded "github.com/ditrit/badaas-cli/cmd/gen/conditions/tests/gormembedded"
	condition "github.com/ditrit/badaas/orm/condition"
	model "github.com/ditrit/badaas/orm/model"
	operator "github.com/ditrit/badaas/orm/operator"
	query "github.com/ditrit/badaas/orm/query"
	"reflect"
	"time"
)

var gormEmbeddedType = reflect.TypeOf(*new(gormembedded.GormEmbedded))
var GormEmbeddedIdField = query.FieldIdentifier[model.UIntID]{
	Field:     "ID",
	ModelType: gormEmbeddedType,
}

func GormEmbeddedId(operator operator.Operator[model.UIntID]) condition.WhereCondition[gormembedded.GormEmbedded] {
	return condition.NewFieldCondition[gormembedded.GormEmbedded, model.UIntID](GormEmbeddedIdField, operator)
}

var GormEmbeddedCreatedAtField = query.FieldIdentifier[time.Time]{
	Field:     "CreatedAt",
	ModelType: gormEmbeddedType,
}

func GormEmbeddedCreatedAt(operator operator.Operator[time.Time]) condition.WhereCondition[gormembedded.GormEmbedded] {
	return condition.NewFieldCondition[gormembedded.GormEmbedded, time.Time](GormEmbeddedCreatedAtField, operator)
}

var GormEmbeddedUpdatedAtField = query.FieldIdentifier[time.Time]{
	Field:     "UpdatedAt",
	ModelType: gormEmbeddedType,
}

func GormEmbeddedUpdatedAt(operator operator.Operator[time.Time]) condition.WhereCondition[gormembedded.GormEmbedded] {
	return condition.NewFieldCondition[gormembedded.GormEmbedded, time.Time](GormEmbeddedUpdatedAtField, operator)
}

var GormEmbeddedDeletedAtField = query.FieldIdentifier[time.Time]{
	Field:     "DeletedAt",
	ModelType: gormEmbeddedType,
}

func GormEmbeddedDeletedAt(operator operator.Operator[time.Time]) condition.WhereCondition[gormembedded.GormEmbedded] {
	return condition.NewFieldCondition[gormembedded.GormEmbedded, time.Time](GormEmbeddedDeletedAtField, operator)
}

var GormEmbeddedIntField = query.FieldIdentifier[int]{
	Field:     "Int",
	ModelType: gormEmbeddedType,
}

func GormEmbeddedInt(operator operator.Operator[int]) condition.WhereCondition[gormembedded.GormEmbedded] {
	return condition.NewFieldCondition[gormembedded.GormEmbedded, int](GormEmbeddedIntField, operator)
}

var GormEmbeddedGormEmbeddedIntField = query.FieldIdentifier[int]{
	ColumnPrefix: "gorm_embedded_",
	Field:        "Int",
	ModelType:    gormEmbeddedType,
}

func GormEmbeddedGormEmbeddedInt(operator operator.Operator[int]) condition.WhereCondition[gormembedded.GormEmbedded] {
	return condition.NewFieldCondition[gormembedded.GormEmbedded, int](GormEmbeddedGormEmbeddedIntField, operator)
}

var GormEmbeddedGormEmbeddedNoPrefixIntField = query.FieldIdentifier[int]{
	Field:     "Int",
	ModelType: gormEmbeddedType,
}

func GormEmbeddedGormEmbeddedNoPrefixInt(operator operator.Operator[int]) condition.WhereCondition[gormembedded.GormEmbedded] {
	return condition.NewFieldCondition[gormembedded.GormEmbedded, int](GormEmbeddedGormEmbeddedNoPrefixIntField, operator)
}

var GormEmbeddedPreloadAttributes = condition.NewPreloadCondition[gormembedded.GormEmbedded](GormEmbeddedIdField, GormEmbeddedCreatedAtField, GormEmbeddedUpdatedAtField, GormEmbeddedDeletedAtField, GormEmbeddedIntField, GormEmbeddedGormEmbeddedIntField, GormEmbeddedGormEmbeddedNoPrefixIntField)
