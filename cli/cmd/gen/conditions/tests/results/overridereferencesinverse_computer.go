// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	overridereferencesinverse "github.com/ditrit/badaas-cli/cmd/gen/conditions/tests/overridereferencesinverse"
	condition "github.com/ditrit/badaas/orm/condition"
	model "github.com/ditrit/badaas/orm/model"
	operator "github.com/ditrit/badaas/orm/operator"
	query "github.com/ditrit/badaas/orm/query"
	"reflect"
	"time"
)

var computerType = reflect.TypeOf(*new(overridereferencesinverse.Computer))
var ComputerIdField = query.FieldIdentifier[model.UUID]{
	Field:     "ID",
	ModelType: computerType,
}

func ComputerId(operator operator.Operator[model.UUID]) condition.WhereCondition[overridereferencesinverse.Computer] {
	return condition.NewFieldCondition[overridereferencesinverse.Computer, model.UUID](ComputerIdField, operator)
}

var ComputerCreatedAtField = query.FieldIdentifier[time.Time]{
	Field:     "CreatedAt",
	ModelType: computerType,
}

func ComputerCreatedAt(operator operator.Operator[time.Time]) condition.WhereCondition[overridereferencesinverse.Computer] {
	return condition.NewFieldCondition[overridereferencesinverse.Computer, time.Time](ComputerCreatedAtField, operator)
}

var ComputerUpdatedAtField = query.FieldIdentifier[time.Time]{
	Field:     "UpdatedAt",
	ModelType: computerType,
}

func ComputerUpdatedAt(operator operator.Operator[time.Time]) condition.WhereCondition[overridereferencesinverse.Computer] {
	return condition.NewFieldCondition[overridereferencesinverse.Computer, time.Time](ComputerUpdatedAtField, operator)
}

var ComputerDeletedAtField = query.FieldIdentifier[time.Time]{
	Field:     "DeletedAt",
	ModelType: computerType,
}

func ComputerDeletedAt(operator operator.Operator[time.Time]) condition.WhereCondition[overridereferencesinverse.Computer] {
	return condition.NewFieldCondition[overridereferencesinverse.Computer, time.Time](ComputerDeletedAtField, operator)
}

var ComputerNameField = query.FieldIdentifier[string]{
	Field:     "Name",
	ModelType: computerType,
}

func ComputerName(operator operator.Operator[string]) condition.WhereCondition[overridereferencesinverse.Computer] {
	return condition.NewFieldCondition[overridereferencesinverse.Computer, string](ComputerNameField, operator)
}
func ComputerProcessor(conditions ...condition.Condition[overridereferencesinverse.Processor]) condition.JoinCondition[overridereferencesinverse.Computer] {
	return condition.NewJoinCondition[overridereferencesinverse.Computer, overridereferencesinverse.Processor](conditions, "Processor", "Name", ComputerPreloadAttributes, "ComputerName")
}

var ComputerPreloadProcessor = ComputerProcessor(ProcessorPreloadAttributes)
var ComputerPreloadAttributes = condition.NewPreloadCondition[overridereferencesinverse.Computer](ComputerIdField, ComputerCreatedAtField, ComputerUpdatedAtField, ComputerDeletedAtField, ComputerNameField)
var ComputerPreloadRelations = []condition.Condition[overridereferencesinverse.Computer]{ComputerPreloadProcessor}
