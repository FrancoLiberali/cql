// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	customtype "github.com/ditrit/badaas-cli/cmd/gen/conditions/tests/customtype"
	condition "github.com/ditrit/badaas/orm/condition"
	model "github.com/ditrit/badaas/orm/model"
	operator "github.com/ditrit/badaas/orm/operator"
	query "github.com/ditrit/badaas/orm/query"
	"reflect"
	"time"
)

var customTypeType = reflect.TypeOf(*new(customtype.CustomType))
var CustomTypeIdField = query.FieldIdentifier[model.UUID]{
	Field:     "ID",
	ModelType: customTypeType,
}

func CustomTypeId(operator operator.Operator[model.UUID]) condition.WhereCondition[customtype.CustomType] {
	return condition.NewFieldCondition[customtype.CustomType, model.UUID](CustomTypeIdField, operator)
}

var CustomTypeCreatedAtField = query.FieldIdentifier[time.Time]{
	Field:     "CreatedAt",
	ModelType: customTypeType,
}

func CustomTypeCreatedAt(operator operator.Operator[time.Time]) condition.WhereCondition[customtype.CustomType] {
	return condition.NewFieldCondition[customtype.CustomType, time.Time](CustomTypeCreatedAtField, operator)
}

var CustomTypeUpdatedAtField = query.FieldIdentifier[time.Time]{
	Field:     "UpdatedAt",
	ModelType: customTypeType,
}

func CustomTypeUpdatedAt(operator operator.Operator[time.Time]) condition.WhereCondition[customtype.CustomType] {
	return condition.NewFieldCondition[customtype.CustomType, time.Time](CustomTypeUpdatedAtField, operator)
}

var CustomTypeDeletedAtField = query.FieldIdentifier[time.Time]{
	Field:     "DeletedAt",
	ModelType: customTypeType,
}

func CustomTypeDeletedAt(operator operator.Operator[time.Time]) condition.WhereCondition[customtype.CustomType] {
	return condition.NewFieldCondition[customtype.CustomType, time.Time](CustomTypeDeletedAtField, operator)
}

var CustomTypeCustomField = query.FieldIdentifier[customtype.MultiString]{
	Field:     "Custom",
	ModelType: customTypeType,
}

func CustomTypeCustom(operator operator.Operator[customtype.MultiString]) condition.WhereCondition[customtype.CustomType] {
	return condition.NewFieldCondition[customtype.CustomType, customtype.MultiString](CustomTypeCustomField, operator)
}

var CustomTypePreloadAttributes = condition.NewPreloadCondition[customtype.CustomType](CustomTypeIdField, CustomTypeCreatedAtField, CustomTypeUpdatedAtField, CustomTypeDeletedAtField, CustomTypeCustomField)
