// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	columndefinition "github.com/ditrit/badaas-cli/cmd/gen/conditions/tests/columndefinition"
	condition "github.com/ditrit/badaas/orm/condition"
	model "github.com/ditrit/badaas/orm/model"
	operator "github.com/ditrit/badaas/orm/operator"
	query "github.com/ditrit/badaas/orm/query"
	"reflect"
	"time"
)

var columnDefinitionType = reflect.TypeOf(*new(columndefinition.ColumnDefinition))
var ColumnDefinitionIdField = query.FieldIdentifier[model.UUID]{
	Field:     "ID",
	ModelType: columnDefinitionType,
}

func ColumnDefinitionId(operator operator.Operator[model.UUID]) condition.WhereCondition[columndefinition.ColumnDefinition] {
	return condition.NewFieldCondition[columndefinition.ColumnDefinition, model.UUID](ColumnDefinitionIdField, operator)
}

var ColumnDefinitionCreatedAtField = query.FieldIdentifier[time.Time]{
	Field:     "CreatedAt",
	ModelType: columnDefinitionType,
}

func ColumnDefinitionCreatedAt(operator operator.Operator[time.Time]) condition.WhereCondition[columndefinition.ColumnDefinition] {
	return condition.NewFieldCondition[columndefinition.ColumnDefinition, time.Time](ColumnDefinitionCreatedAtField, operator)
}

var ColumnDefinitionUpdatedAtField = query.FieldIdentifier[time.Time]{
	Field:     "UpdatedAt",
	ModelType: columnDefinitionType,
}

func ColumnDefinitionUpdatedAt(operator operator.Operator[time.Time]) condition.WhereCondition[columndefinition.ColumnDefinition] {
	return condition.NewFieldCondition[columndefinition.ColumnDefinition, time.Time](ColumnDefinitionUpdatedAtField, operator)
}

var ColumnDefinitionDeletedAtField = query.FieldIdentifier[time.Time]{
	Field:     "DeletedAt",
	ModelType: columnDefinitionType,
}

func ColumnDefinitionDeletedAt(operator operator.Operator[time.Time]) condition.WhereCondition[columndefinition.ColumnDefinition] {
	return condition.NewFieldCondition[columndefinition.ColumnDefinition, time.Time](ColumnDefinitionDeletedAtField, operator)
}

var ColumnDefinitionStringField = query.FieldIdentifier[string]{
	Column:    "string_something_else",
	Field:     "String",
	ModelType: columnDefinitionType,
}

func ColumnDefinitionString(operator operator.Operator[string]) condition.WhereCondition[columndefinition.ColumnDefinition] {
	return condition.NewFieldCondition[columndefinition.ColumnDefinition, string](ColumnDefinitionStringField, operator)
}

var ColumnDefinitionPreloadAttributes = condition.NewPreloadCondition[columndefinition.ColumnDefinition](ColumnDefinitionIdField, ColumnDefinitionCreatedAtField, ColumnDefinitionUpdatedAtField, ColumnDefinitionDeletedAtField, ColumnDefinitionStringField)
