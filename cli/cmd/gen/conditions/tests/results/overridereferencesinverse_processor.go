// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	overridereferencesinverse "github.com/ditrit/badaas-cli/cmd/gen/conditions/tests/overridereferencesinverse"
	orm "github.com/ditrit/badaas/orm"
	condition "github.com/ditrit/badaas/orm/condition"
	model "github.com/ditrit/badaas/orm/model"
	query "github.com/ditrit/badaas/orm/query"
	"reflect"
	"time"
)

var processorType = reflect.TypeOf(*new(overridereferencesinverse.Processor))

func (processorConditions processorConditions) IdIs() orm.FieldIs[overridereferencesinverse.Processor, model.UUID] {
	return orm.FieldIs[overridereferencesinverse.Processor, model.UUID]{FieldID: processorConditions.ID}
}
func (processorConditions processorConditions) CreatedAtIs() orm.FieldIs[overridereferencesinverse.Processor, time.Time] {
	return orm.FieldIs[overridereferencesinverse.Processor, time.Time]{FieldID: processorConditions.CreatedAt}
}
func (processorConditions processorConditions) UpdatedAtIs() orm.FieldIs[overridereferencesinverse.Processor, time.Time] {
	return orm.FieldIs[overridereferencesinverse.Processor, time.Time]{FieldID: processorConditions.UpdatedAt}
}
func (processorConditions processorConditions) DeletedAtIs() orm.FieldIs[overridereferencesinverse.Processor, time.Time] {
	return orm.FieldIs[overridereferencesinverse.Processor, time.Time]{FieldID: processorConditions.DeletedAt}
}
func (processorConditions processorConditions) ComputerNameIs() orm.StringFieldIs[overridereferencesinverse.Processor] {
	return orm.StringFieldIs[overridereferencesinverse.Processor]{FieldIs: orm.FieldIs[overridereferencesinverse.Processor, string]{FieldID: processorConditions.ComputerName}}
}

type processorConditions struct {
	ID           query.FieldIdentifier[model.UUID]
	CreatedAt    query.FieldIdentifier[time.Time]
	UpdatedAt    query.FieldIdentifier[time.Time]
	DeletedAt    query.FieldIdentifier[time.Time]
	ComputerName query.FieldIdentifier[string]
}

var Processor = processorConditions{
	ComputerName: query.FieldIdentifier[string]{
		Field:     "ComputerName",
		ModelType: processorType,
	},
	CreatedAt: query.FieldIdentifier[time.Time]{
		Field:     "CreatedAt",
		ModelType: processorType,
	},
	DeletedAt: query.FieldIdentifier[time.Time]{
		Field:     "DeletedAt",
		ModelType: processorType,
	},
	ID: query.FieldIdentifier[model.UUID]{
		Field:     "ID",
		ModelType: processorType,
	},
	UpdatedAt: query.FieldIdentifier[time.Time]{
		Field:     "UpdatedAt",
		ModelType: processorType,
	},
}

// Preload allows preloading the Processor when doing a query
func (processorConditions processorConditions) Preload() condition.Condition[overridereferencesinverse.Processor] {
	return condition.NewPreloadCondition[overridereferencesinverse.Processor](processorConditions.ID, processorConditions.CreatedAt, processorConditions.UpdatedAt, processorConditions.DeletedAt, processorConditions.ComputerName)
}
