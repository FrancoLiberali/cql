// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	nullabletypes "github.com/ditrit/badaas-cli/cmd/gen/conditions/tests/nullabletypes"
	condition "github.com/ditrit/badaas/orm/condition"
	model "github.com/ditrit/badaas/orm/model"
	operator "github.com/ditrit/badaas/orm/operator"
	query "github.com/ditrit/badaas/orm/query"
	"reflect"
	"time"
)

var nullableTypesType = reflect.TypeOf(*new(nullabletypes.NullableTypes))
var NullableTypesIdField = query.FieldIdentifier[model.UUID]{
	Field:     "ID",
	ModelType: nullableTypesType,
}

func NullableTypesId(operator operator.Operator[model.UUID]) condition.WhereCondition[nullabletypes.NullableTypes] {
	return condition.NewFieldCondition[nullabletypes.NullableTypes, model.UUID](NullableTypesIdField, operator)
}

var NullableTypesCreatedAtField = query.FieldIdentifier[time.Time]{
	Field:     "CreatedAt",
	ModelType: nullableTypesType,
}

func NullableTypesCreatedAt(operator operator.Operator[time.Time]) condition.WhereCondition[nullabletypes.NullableTypes] {
	return condition.NewFieldCondition[nullabletypes.NullableTypes, time.Time](NullableTypesCreatedAtField, operator)
}

var NullableTypesUpdatedAtField = query.FieldIdentifier[time.Time]{
	Field:     "UpdatedAt",
	ModelType: nullableTypesType,
}

func NullableTypesUpdatedAt(operator operator.Operator[time.Time]) condition.WhereCondition[nullabletypes.NullableTypes] {
	return condition.NewFieldCondition[nullabletypes.NullableTypes, time.Time](NullableTypesUpdatedAtField, operator)
}

var NullableTypesDeletedAtField = query.FieldIdentifier[time.Time]{
	Field:     "DeletedAt",
	ModelType: nullableTypesType,
}

func NullableTypesDeletedAt(operator operator.Operator[time.Time]) condition.WhereCondition[nullabletypes.NullableTypes] {
	return condition.NewFieldCondition[nullabletypes.NullableTypes, time.Time](NullableTypesDeletedAtField, operator)
}

var NullableTypesStringField = query.FieldIdentifier[string]{
	Field:     "String",
	ModelType: nullableTypesType,
}

func NullableTypesString(operator operator.Operator[string]) condition.WhereCondition[nullabletypes.NullableTypes] {
	return condition.NewFieldCondition[nullabletypes.NullableTypes, string](NullableTypesStringField, operator)
}

var NullableTypesInt64Field = query.FieldIdentifier[int64]{
	Field:     "Int64",
	ModelType: nullableTypesType,
}

func NullableTypesInt64(operator operator.Operator[int64]) condition.WhereCondition[nullabletypes.NullableTypes] {
	return condition.NewFieldCondition[nullabletypes.NullableTypes, int64](NullableTypesInt64Field, operator)
}

var NullableTypesInt32Field = query.FieldIdentifier[int32]{
	Field:     "Int32",
	ModelType: nullableTypesType,
}

func NullableTypesInt32(operator operator.Operator[int32]) condition.WhereCondition[nullabletypes.NullableTypes] {
	return condition.NewFieldCondition[nullabletypes.NullableTypes, int32](NullableTypesInt32Field, operator)
}

var NullableTypesInt16Field = query.FieldIdentifier[int16]{
	Field:     "Int16",
	ModelType: nullableTypesType,
}

func NullableTypesInt16(operator operator.Operator[int16]) condition.WhereCondition[nullabletypes.NullableTypes] {
	return condition.NewFieldCondition[nullabletypes.NullableTypes, int16](NullableTypesInt16Field, operator)
}

var NullableTypesByteField = query.FieldIdentifier[int8]{
	Field:     "Byte",
	ModelType: nullableTypesType,
}

func NullableTypesByte(operator operator.Operator[int8]) condition.WhereCondition[nullabletypes.NullableTypes] {
	return condition.NewFieldCondition[nullabletypes.NullableTypes, int8](NullableTypesByteField, operator)
}

var NullableTypesFloat64Field = query.FieldIdentifier[float64]{
	Field:     "Float64",
	ModelType: nullableTypesType,
}

func NullableTypesFloat64(operator operator.Operator[float64]) condition.WhereCondition[nullabletypes.NullableTypes] {
	return condition.NewFieldCondition[nullabletypes.NullableTypes, float64](NullableTypesFloat64Field, operator)
}

var NullableTypesBoolField = query.FieldIdentifier[bool]{
	Field:     "Bool",
	ModelType: nullableTypesType,
}

func NullableTypesBool(operator operator.Operator[bool]) condition.WhereCondition[nullabletypes.NullableTypes] {
	return condition.NewFieldCondition[nullabletypes.NullableTypes, bool](NullableTypesBoolField, operator)
}

var NullableTypesTimeField = query.FieldIdentifier[time.Time]{
	Field:     "Time",
	ModelType: nullableTypesType,
}

func NullableTypesTime(operator operator.Operator[time.Time]) condition.WhereCondition[nullabletypes.NullableTypes] {
	return condition.NewFieldCondition[nullabletypes.NullableTypes, time.Time](NullableTypesTimeField, operator)
}

var NullableTypesPreloadAttributes = condition.NewPreloadCondition[nullabletypes.NullableTypes](NullableTypesIdField, NullableTypesCreatedAtField, NullableTypesUpdatedAtField, NullableTypesDeletedAtField, NullableTypesStringField, NullableTypesInt64Field, NullableTypesInt32Field, NullableTypesInt16Field, NullableTypesByteField, NullableTypesFloat64Field, NullableTypesBoolField, NullableTypesTimeField)
