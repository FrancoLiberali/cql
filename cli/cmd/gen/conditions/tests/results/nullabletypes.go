// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	nullabletypes "github.com/ditrit/badaas-cli/cmd/gen/conditions/tests/nullabletypes"
	orm "github.com/ditrit/badaas/orm"
	condition "github.com/ditrit/badaas/orm/condition"
	model "github.com/ditrit/badaas/orm/model"
	query "github.com/ditrit/badaas/orm/query"
	"reflect"
	"time"
)

var nullableTypesType = reflect.TypeOf(*new(nullabletypes.NullableTypes))

func (nullableTypesConditions nullableTypesConditions) IdIs() orm.FieldIs[nullabletypes.NullableTypes, model.UUID] {
	return orm.FieldIs[nullabletypes.NullableTypes, model.UUID]{FieldID: nullableTypesConditions.ID}
}
func (nullableTypesConditions nullableTypesConditions) CreatedAtIs() orm.FieldIs[nullabletypes.NullableTypes, time.Time] {
	return orm.FieldIs[nullabletypes.NullableTypes, time.Time]{FieldID: nullableTypesConditions.CreatedAt}
}
func (nullableTypesConditions nullableTypesConditions) UpdatedAtIs() orm.FieldIs[nullabletypes.NullableTypes, time.Time] {
	return orm.FieldIs[nullabletypes.NullableTypes, time.Time]{FieldID: nullableTypesConditions.UpdatedAt}
}
func (nullableTypesConditions nullableTypesConditions) DeletedAtIs() orm.FieldIs[nullabletypes.NullableTypes, time.Time] {
	return orm.FieldIs[nullabletypes.NullableTypes, time.Time]{FieldID: nullableTypesConditions.DeletedAt}
}
func (nullableTypesConditions nullableTypesConditions) StringIs() orm.StringFieldIs[nullabletypes.NullableTypes] {
	return orm.StringFieldIs[nullabletypes.NullableTypes]{FieldIs: orm.FieldIs[nullabletypes.NullableTypes, string]{FieldID: nullableTypesConditions.String}}
}
func (nullableTypesConditions nullableTypesConditions) Int64Is() orm.FieldIs[nullabletypes.NullableTypes, int64] {
	return orm.FieldIs[nullabletypes.NullableTypes, int64]{FieldID: nullableTypesConditions.Int64}
}
func (nullableTypesConditions nullableTypesConditions) Int32Is() orm.FieldIs[nullabletypes.NullableTypes, int32] {
	return orm.FieldIs[nullabletypes.NullableTypes, int32]{FieldID: nullableTypesConditions.Int32}
}
func (nullableTypesConditions nullableTypesConditions) Int16Is() orm.FieldIs[nullabletypes.NullableTypes, int16] {
	return orm.FieldIs[nullabletypes.NullableTypes, int16]{FieldID: nullableTypesConditions.Int16}
}
func (nullableTypesConditions nullableTypesConditions) ByteIs() orm.FieldIs[nullabletypes.NullableTypes, int8] {
	return orm.FieldIs[nullabletypes.NullableTypes, int8]{FieldID: nullableTypesConditions.Byte}
}
func (nullableTypesConditions nullableTypesConditions) Float64Is() orm.FieldIs[nullabletypes.NullableTypes, float64] {
	return orm.FieldIs[nullabletypes.NullableTypes, float64]{FieldID: nullableTypesConditions.Float64}
}
func (nullableTypesConditions nullableTypesConditions) BoolIs() orm.BoolFieldIs[nullabletypes.NullableTypes] {
	return orm.BoolFieldIs[nullabletypes.NullableTypes]{FieldIs: orm.FieldIs[nullabletypes.NullableTypes, bool]{FieldID: nullableTypesConditions.Bool}}
}
func (nullableTypesConditions nullableTypesConditions) TimeIs() orm.FieldIs[nullabletypes.NullableTypes, time.Time] {
	return orm.FieldIs[nullabletypes.NullableTypes, time.Time]{FieldID: nullableTypesConditions.Time}
}

type nullableTypesConditions struct {
	ID        query.FieldIdentifier[model.UUID]
	CreatedAt query.FieldIdentifier[time.Time]
	UpdatedAt query.FieldIdentifier[time.Time]
	DeletedAt query.FieldIdentifier[time.Time]
	String    query.FieldIdentifier[string]
	Int64     query.FieldIdentifier[int64]
	Int32     query.FieldIdentifier[int32]
	Int16     query.FieldIdentifier[int16]
	Byte      query.FieldIdentifier[int8]
	Float64   query.FieldIdentifier[float64]
	Bool      query.FieldIdentifier[bool]
	Time      query.FieldIdentifier[time.Time]
}

var NullableTypes = nullableTypesConditions{
	Bool: query.FieldIdentifier[bool]{
		Field:     "Bool",
		ModelType: nullableTypesType,
	},
	Byte: query.FieldIdentifier[int8]{
		Field:     "Byte",
		ModelType: nullableTypesType,
	},
	CreatedAt: query.FieldIdentifier[time.Time]{
		Field:     "CreatedAt",
		ModelType: nullableTypesType,
	},
	DeletedAt: query.FieldIdentifier[time.Time]{
		Field:     "DeletedAt",
		ModelType: nullableTypesType,
	},
	Float64: query.FieldIdentifier[float64]{
		Field:     "Float64",
		ModelType: nullableTypesType,
	},
	ID: query.FieldIdentifier[model.UUID]{
		Field:     "ID",
		ModelType: nullableTypesType,
	},
	Int16: query.FieldIdentifier[int16]{
		Field:     "Int16",
		ModelType: nullableTypesType,
	},
	Int32: query.FieldIdentifier[int32]{
		Field:     "Int32",
		ModelType: nullableTypesType,
	},
	Int64: query.FieldIdentifier[int64]{
		Field:     "Int64",
		ModelType: nullableTypesType,
	},
	String: query.FieldIdentifier[string]{
		Field:     "String",
		ModelType: nullableTypesType,
	},
	Time: query.FieldIdentifier[time.Time]{
		Field:     "Time",
		ModelType: nullableTypesType,
	},
	UpdatedAt: query.FieldIdentifier[time.Time]{
		Field:     "UpdatedAt",
		ModelType: nullableTypesType,
	},
}

// Preload allows preloading the NullableTypes when doing a query
func (nullableTypesConditions nullableTypesConditions) Preload() condition.Condition[nullabletypes.NullableTypes] {
	return condition.NewPreloadCondition[nullabletypes.NullableTypes](nullableTypesConditions.ID, nullableTypesConditions.CreatedAt, nullableTypesConditions.UpdatedAt, nullableTypesConditions.DeletedAt, nullableTypesConditions.String, nullableTypesConditions.Int64, nullableTypesConditions.Int32, nullableTypesConditions.Int16, nullableTypesConditions.Byte, nullableTypesConditions.Float64, nullableTypesConditions.Bool, nullableTypesConditions.Time)
}
