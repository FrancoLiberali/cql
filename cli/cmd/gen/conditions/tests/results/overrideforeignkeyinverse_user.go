// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	overrideforeignkeyinverse "github.com/ditrit/badaas-cli/cmd/gen/conditions/tests/overrideforeignkeyinverse"
	condition "github.com/ditrit/badaas/orm/condition"
	model "github.com/ditrit/badaas/orm/model"
	operator "github.com/ditrit/badaas/orm/operator"
	query "github.com/ditrit/badaas/orm/query"
	"reflect"
	"time"
)

var userType = reflect.TypeOf(*new(overrideforeignkeyinverse.User))
var UserIdField = query.FieldIdentifier[model.UUID]{
	Field:     "ID",
	ModelType: userType,
}

func UserId(operator operator.Operator[model.UUID]) condition.WhereCondition[overrideforeignkeyinverse.User] {
	return condition.NewFieldCondition[overrideforeignkeyinverse.User, model.UUID](UserIdField, operator)
}

var UserCreatedAtField = query.FieldIdentifier[time.Time]{
	Field:     "CreatedAt",
	ModelType: userType,
}

func UserCreatedAt(operator operator.Operator[time.Time]) condition.WhereCondition[overrideforeignkeyinverse.User] {
	return condition.NewFieldCondition[overrideforeignkeyinverse.User, time.Time](UserCreatedAtField, operator)
}

var UserUpdatedAtField = query.FieldIdentifier[time.Time]{
	Field:     "UpdatedAt",
	ModelType: userType,
}

func UserUpdatedAt(operator operator.Operator[time.Time]) condition.WhereCondition[overrideforeignkeyinverse.User] {
	return condition.NewFieldCondition[overrideforeignkeyinverse.User, time.Time](UserUpdatedAtField, operator)
}

var UserDeletedAtField = query.FieldIdentifier[time.Time]{
	Field:     "DeletedAt",
	ModelType: userType,
}

func UserDeletedAt(operator operator.Operator[time.Time]) condition.WhereCondition[overrideforeignkeyinverse.User] {
	return condition.NewFieldCondition[overrideforeignkeyinverse.User, time.Time](UserDeletedAtField, operator)
}
func UserCreditCard(conditions ...condition.Condition[overrideforeignkeyinverse.CreditCard]) condition.JoinCondition[overrideforeignkeyinverse.User] {
	return condition.NewJoinCondition[overrideforeignkeyinverse.User, overrideforeignkeyinverse.CreditCard](conditions, "CreditCard", "ID", UserPreloadAttributes, "UserReference")
}

var UserPreloadCreditCard = UserCreditCard(CreditCardPreloadAttributes)
var UserPreloadAttributes = condition.NewPreloadCondition[overrideforeignkeyinverse.User](UserIdField, UserCreatedAtField, UserUpdatedAtField, UserDeletedAtField)
var UserPreloadRelations = []condition.Condition[overrideforeignkeyinverse.User]{UserPreloadCreditCard}
