// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	hasone "github.com/ditrit/badaas-cli/cmd/gen/conditions/tests/hasone"
	orm "github.com/ditrit/badaas/orm"
	"reflect"
	"time"
)

var countryType = reflect.TypeOf(*new(hasone.Country))
var CountryIdField = orm.FieldIdentifier[orm.UUID]{
	Field:     "ID",
	ModelType: countryType,
}

func CountryId(operator orm.Operator[orm.UUID]) orm.WhereCondition[hasone.Country] {
	return orm.FieldCondition[hasone.Country, orm.UUID]{
		FieldIdentifier: CountryIdField,
		Operator:        operator,
	}
}

var CountryCreatedAtField = orm.FieldIdentifier[time.Time]{
	Field:     "CreatedAt",
	ModelType: countryType,
}

func CountryCreatedAt(operator orm.Operator[time.Time]) orm.WhereCondition[hasone.Country] {
	return orm.FieldCondition[hasone.Country, time.Time]{
		FieldIdentifier: CountryCreatedAtField,
		Operator:        operator,
	}
}

var CountryUpdatedAtField = orm.FieldIdentifier[time.Time]{
	Field:     "UpdatedAt",
	ModelType: countryType,
}

func CountryUpdatedAt(operator orm.Operator[time.Time]) orm.WhereCondition[hasone.Country] {
	return orm.FieldCondition[hasone.Country, time.Time]{
		FieldIdentifier: CountryUpdatedAtField,
		Operator:        operator,
	}
}

var CountryDeletedAtField = orm.FieldIdentifier[time.Time]{
	Field:     "DeletedAt",
	ModelType: countryType,
}

func CountryDeletedAt(operator orm.Operator[time.Time]) orm.WhereCondition[hasone.Country] {
	return orm.FieldCondition[hasone.Country, time.Time]{
		FieldIdentifier: CountryDeletedAtField,
		Operator:        operator,
	}
}
func CountryCapital(conditions ...orm.Condition[hasone.City]) orm.IJoinCondition[hasone.Country] {
	return orm.JoinCondition[hasone.Country, hasone.City]{
		Conditions:         conditions,
		RelationField:      "Capital",
		T1Field:            "ID",
		T1PreloadCondition: CountryPreloadAttributes,
		T2Field:            "CountryID",
	}
}

var CountryPreloadCapital = CountryCapital(CityPreloadAttributes)
var CountryPreloadAttributes = orm.NewPreloadCondition[hasone.Country](CountryIdField, CountryCreatedAtField, CountryUpdatedAtField, CountryDeletedAtField)
var CountryPreloadRelations = []orm.Condition[hasone.Country]{CountryPreloadCapital}
