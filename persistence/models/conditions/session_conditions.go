// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	cql "github.com/ditrit/badaas/orm/cql"
	model "github.com/ditrit/badaas/orm/model"
	models "github.com/ditrit/badaas/persistence/models"
	"time"
)

type sessionConditions struct {
	ID        cql.Field[models.Session, model.UUID]
	CreatedAt cql.Field[models.Session, time.Time]
	UpdatedAt cql.Field[models.Session, time.Time]
	DeletedAt cql.Field[models.Session, time.Time]
	UserID    cql.Field[models.Session, model.UUID]
	ExpiresAt cql.Field[models.Session, time.Time]
}

var Session = sessionConditions{
	CreatedAt: cql.Field[models.Session, time.Time]{Name: "CreatedAt"},
	DeletedAt: cql.Field[models.Session, time.Time]{Name: "DeletedAt"},
	ExpiresAt: cql.Field[models.Session, time.Time]{Name: "ExpiresAt"},
	ID:        cql.Field[models.Session, model.UUID]{Name: "ID"},
	UpdatedAt: cql.Field[models.Session, time.Time]{Name: "UpdatedAt"},
	UserID:    cql.Field[models.Session, model.UUID]{Name: "UserID"},
}

// Preload allows preloading the Session when doing a query
func (sessionConditions sessionConditions) Preload() cql.Condition[models.Session] {
	return cql.NewPreloadCondition[models.Session](sessionConditions.ID, sessionConditions.CreatedAt, sessionConditions.UpdatedAt, sessionConditions.DeletedAt, sessionConditions.UserID, sessionConditions.ExpiresAt)
}
