// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	cql "github.com/ditrit/badaas/orm/cql"
	model "github.com/ditrit/badaas/orm/model"
	models "github.com/ditrit/badaas/persistence/models"
	"time"
)

type userConditions struct {
	ID        cql.Field[models.User, model.UUID]
	CreatedAt cql.Field[models.User, time.Time]
	UpdatedAt cql.Field[models.User, time.Time]
	DeletedAt cql.Field[models.User, time.Time]
	Username  cql.StringField[models.User]
	Email     cql.StringField[models.User]
	Password  cql.Field[models.User, []uint8]
}

var User = userConditions{
	CreatedAt: cql.Field[models.User, time.Time]{Name: "CreatedAt"},
	DeletedAt: cql.Field[models.User, time.Time]{Name: "DeletedAt"},
	Email:     cql.StringField[models.User]{Field: cql.Field[models.User, string]{Name: "Email"}},
	ID:        cql.Field[models.User, model.UUID]{Name: "ID"},
	Password:  cql.Field[models.User, []uint8]{Name: "Password"},
	UpdatedAt: cql.Field[models.User, time.Time]{Name: "UpdatedAt"},
	Username:  cql.StringField[models.User]{Field: cql.Field[models.User, string]{Name: "Username"}},
}

// Preload allows preloading the User when doing a query
func (userConditions userConditions) Preload() cql.Condition[models.User] {
	return cql.NewPreloadCondition[models.User](userConditions.ID, userConditions.CreatedAt, userConditions.UpdatedAt, userConditions.DeletedAt, userConditions.Username, userConditions.Email, userConditions.Password)
}
