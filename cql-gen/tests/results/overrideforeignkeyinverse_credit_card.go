// Code generated by cql-gen v0.0.5, DO NOT EDIT.
package conditions

import (
	condition "github.com/FrancoLiberali/cql/condition"
	overrideforeignkeyinverse "github.com/FrancoLiberali/cql/cql-gen/cmd/gen/conditions/tests/overrideforeignkeyinverse"
	model "github.com/FrancoLiberali/cql/model"
	"time"
)

type creditCardConditions struct {
	ID            condition.Field[overrideforeignkeyinverse.CreditCard, model.UUID]
	CreatedAt     condition.Field[overrideforeignkeyinverse.CreditCard, time.Time]
	UpdatedAt     condition.Field[overrideforeignkeyinverse.CreditCard, time.Time]
	DeletedAt     condition.Field[overrideforeignkeyinverse.CreditCard, time.Time]
	UserReference condition.UpdatableField[overrideforeignkeyinverse.CreditCard, model.UUID]
}

var CreditCard = creditCardConditions{
	CreatedAt:     condition.Field[overrideforeignkeyinverse.CreditCard, time.Time]{Name: "CreatedAt"},
	DeletedAt:     condition.Field[overrideforeignkeyinverse.CreditCard, time.Time]{Name: "DeletedAt"},
	ID:            condition.Field[overrideforeignkeyinverse.CreditCard, model.UUID]{Name: "ID"},
	UpdatedAt:     condition.Field[overrideforeignkeyinverse.CreditCard, time.Time]{Name: "UpdatedAt"},
	UserReference: condition.UpdatableField[overrideforeignkeyinverse.CreditCard, model.UUID]{Field: condition.Field[overrideforeignkeyinverse.CreditCard, model.UUID]{Name: "UserReference"}},
}

// Preload allows preloading the CreditCard when doing a query
func (creditCardConditions creditCardConditions) preload() condition.Condition[overrideforeignkeyinverse.CreditCard] {
	return condition.NewPreloadCondition[overrideforeignkeyinverse.CreditCard](creditCardConditions.ID, creditCardConditions.CreatedAt, creditCardConditions.UpdatedAt, creditCardConditions.DeletedAt, creditCardConditions.UserReference)
}
