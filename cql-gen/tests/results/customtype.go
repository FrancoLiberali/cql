// Code generated by cql-gen v0.0.5, DO NOT EDIT.
package conditions

import (
	customtype "github.com/FrancoLiberali/cql-gen/cmd/gen/conditions/tests/customtype"
	condition "github.com/FrancoLiberali/cql/condition"
	model "github.com/FrancoLiberali/cql/model"
	"time"
)

type customTypeConditions struct {
	ID        condition.Field[customtype.CustomType, model.UUID]
	CreatedAt condition.Field[customtype.CustomType, time.Time]
	UpdatedAt condition.Field[customtype.CustomType, time.Time]
	DeletedAt condition.Field[customtype.CustomType, time.Time]
	Custom    condition.UpdatableField[customtype.CustomType, customtype.MultiString]
}

var CustomType = customTypeConditions{
	CreatedAt: condition.Field[customtype.CustomType, time.Time]{Name: "CreatedAt"},
	Custom:    condition.UpdatableField[customtype.CustomType, customtype.MultiString]{Field: condition.Field[customtype.CustomType, customtype.MultiString]{Name: "Custom"}},
	DeletedAt: condition.Field[customtype.CustomType, time.Time]{Name: "DeletedAt"},
	ID:        condition.Field[customtype.CustomType, model.UUID]{Name: "ID"},
	UpdatedAt: condition.Field[customtype.CustomType, time.Time]{Name: "UpdatedAt"},
}

// Preload allows preloading the CustomType when doing a query
func (customTypeConditions customTypeConditions) preload() condition.Condition[customtype.CustomType] {
	return condition.NewPreloadCondition[customtype.CustomType](customTypeConditions.ID, customTypeConditions.CreatedAt, customTypeConditions.UpdatedAt, customTypeConditions.DeletedAt, customTypeConditions.Custom)
}
