// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	http "net/http"

	middlewares "github.com/ditrit/badaas/router/middlewares"
	mock "github.com/stretchr/testify/mock"
)

// JSONController is an autogenerated mock type for the JSONController type
type JSONController struct {
	mock.Mock
}

// Wrap provides a mock function with given fields: handler
func (_m *JSONController) Wrap(handler middlewares.JSONHandler) func(http.ResponseWriter, *http.Request) {
	ret := _m.Called(handler)

	var r0 func(http.ResponseWriter, *http.Request)
	if rf, ok := ret.Get(0).(func(middlewares.JSONHandler) func(http.ResponseWriter, *http.Request)); ok {
		r0 = rf(handler)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func(http.ResponseWriter, *http.Request))
		}
	}

	return r0
}

type mockConstructorTestingTNewJSONController interface {
	mock.TestingT
	Cleanup(func())
}

// NewJSONController creates a new instance of JSONController. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewJSONController(t mockConstructorTestingTNewJSONController) *JSONController {
	mock := &JSONController{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
