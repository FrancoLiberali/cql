// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	zap "go.uber.org/zap"
)

// InitializationConfiguration is an autogenerated mock type for the InitializationConfiguration type
type InitializationConfiguration struct {
	mock.Mock
}

// GetAdminPassword provides a mock function with given fields:
func (_m *InitializationConfiguration) GetAdminPassword() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Log provides a mock function with given fields: logger
func (_m *InitializationConfiguration) Log(logger *zap.Logger) {
	_m.Called(logger)
}

// Reload provides a mock function with given fields:
func (_m *InitializationConfiguration) Reload() {
	_m.Called()
}

type mockConstructorTestingTNewInitializationConfiguration interface {
	mock.TestingT
	Cleanup(func())
}

// NewInitializationConfiguration creates a new instance of InitializationConfiguration. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewInitializationConfiguration(t mockConstructorTestingTNewInitializationConfiguration) *InitializationConfiguration {
	mock := &InitializationConfiguration{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
