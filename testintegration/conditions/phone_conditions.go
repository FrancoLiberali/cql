// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	orm "github.com/ditrit/badaas/orm"
	models "github.com/ditrit/badaas/testintegration/models"
	"reflect"
	"time"
)

var phoneType = reflect.TypeOf(*new(models.Phone))
var PhoneIdField = orm.FieldIdentifier[orm.UIntID]{
	Field:     "ID",
	ModelType: phoneType,
}

func PhoneId(operator orm.Operator[orm.UIntID]) orm.WhereCondition[models.Phone] {
	return orm.FieldCondition[models.Phone, orm.UIntID]{
		FieldIdentifier: PhoneIdField,
		Operator:        operator,
	}
}

var PhoneCreatedAtField = orm.FieldIdentifier[time.Time]{
	Field:     "CreatedAt",
	ModelType: phoneType,
}

func PhoneCreatedAt(operator orm.Operator[time.Time]) orm.WhereCondition[models.Phone] {
	return orm.FieldCondition[models.Phone, time.Time]{
		FieldIdentifier: PhoneCreatedAtField,
		Operator:        operator,
	}
}

var PhoneUpdatedAtField = orm.FieldIdentifier[time.Time]{
	Field:     "UpdatedAt",
	ModelType: phoneType,
}

func PhoneUpdatedAt(operator orm.Operator[time.Time]) orm.WhereCondition[models.Phone] {
	return orm.FieldCondition[models.Phone, time.Time]{
		FieldIdentifier: PhoneUpdatedAtField,
		Operator:        operator,
	}
}

var PhoneDeletedAtField = orm.FieldIdentifier[time.Time]{
	Field:     "DeletedAt",
	ModelType: phoneType,
}

func PhoneDeletedAt(operator orm.Operator[time.Time]) orm.WhereCondition[models.Phone] {
	return orm.FieldCondition[models.Phone, time.Time]{
		FieldIdentifier: PhoneDeletedAtField,
		Operator:        operator,
	}
}

var PhoneNameField = orm.FieldIdentifier[string]{
	Field:     "Name",
	ModelType: phoneType,
}

func PhoneName(operator orm.Operator[string]) orm.WhereCondition[models.Phone] {
	return orm.FieldCondition[models.Phone, string]{
		FieldIdentifier: PhoneNameField,
		Operator:        operator,
	}
}
func PhoneBrand(conditions ...orm.Condition[models.Brand]) orm.IJoinCondition[models.Phone] {
	return orm.JoinCondition[models.Phone, models.Brand]{
		Conditions:         conditions,
		RelationField:      "Brand",
		T1Field:            "BrandID",
		T1PreloadCondition: PhonePreloadAttributes,
		T2Field:            "ID",
	}
}

var PhonePreloadBrand = PhoneBrand(BrandPreloadAttributes)
var PhoneBrandIdField = orm.FieldIdentifier[uint]{
	Field:     "BrandID",
	ModelType: phoneType,
}

func PhoneBrandId(operator orm.Operator[uint]) orm.WhereCondition[models.Phone] {
	return orm.FieldCondition[models.Phone, uint]{
		FieldIdentifier: PhoneBrandIdField,
		Operator:        operator,
	}
}

var PhonePreloadAttributes = orm.NewPreloadCondition[models.Phone](PhoneIdField, PhoneCreatedAtField, PhoneUpdatedAtField, PhoneDeletedAtField, PhoneNameField, PhoneBrandIdField)
var PhonePreloadRelations = []orm.Condition[models.Phone]{PhonePreloadBrand}
