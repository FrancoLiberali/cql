// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	condition "github.com/ditrit/badaas/orm/condition"
	model "github.com/ditrit/badaas/orm/model"
	operator "github.com/ditrit/badaas/orm/operator"
	query "github.com/ditrit/badaas/orm/query"
	models "github.com/ditrit/badaas/testintegration/models"
	"reflect"
	"time"
)

var phoneType = reflect.TypeOf(*new(models.Phone))
var PhoneIdField = query.FieldIdentifier[model.UIntID]{
	Field:     "ID",
	ModelType: phoneType,
}

func PhoneId(operator operator.Operator[model.UIntID]) condition.WhereCondition[models.Phone] {
	return condition.NewFieldCondition[models.Phone, model.UIntID](PhoneIdField, operator)
}

var PhoneCreatedAtField = query.FieldIdentifier[time.Time]{
	Field:     "CreatedAt",
	ModelType: phoneType,
}

func PhoneCreatedAt(operator operator.Operator[time.Time]) condition.WhereCondition[models.Phone] {
	return condition.NewFieldCondition[models.Phone, time.Time](PhoneCreatedAtField, operator)
}

var PhoneUpdatedAtField = query.FieldIdentifier[time.Time]{
	Field:     "UpdatedAt",
	ModelType: phoneType,
}

func PhoneUpdatedAt(operator operator.Operator[time.Time]) condition.WhereCondition[models.Phone] {
	return condition.NewFieldCondition[models.Phone, time.Time](PhoneUpdatedAtField, operator)
}

var PhoneDeletedAtField = query.FieldIdentifier[time.Time]{
	Field:     "DeletedAt",
	ModelType: phoneType,
}

func PhoneDeletedAt(operator operator.Operator[time.Time]) condition.WhereCondition[models.Phone] {
	return condition.NewFieldCondition[models.Phone, time.Time](PhoneDeletedAtField, operator)
}

var PhoneNameField = query.FieldIdentifier[string]{
	Field:     "Name",
	ModelType: phoneType,
}

func PhoneName(operator operator.Operator[string]) condition.WhereCondition[models.Phone] {
	return condition.NewFieldCondition[models.Phone, string](PhoneNameField, operator)
}
func PhoneBrand(conditions ...condition.Condition[models.Brand]) condition.JoinCondition[models.Phone] {
	return condition.NewJoinCondition[models.Phone, models.Brand](conditions, "Brand", "BrandID", PhonePreloadAttributes, "ID")
}

var PhonePreloadBrand = PhoneBrand(BrandPreloadAttributes)
var PhoneBrandIdField = query.FieldIdentifier[uint]{
	Field:     "BrandID",
	ModelType: phoneType,
}

func PhoneBrandId(operator operator.Operator[uint]) condition.WhereCondition[models.Phone] {
	return condition.NewFieldCondition[models.Phone, uint](PhoneBrandIdField, operator)
}

var PhonePreloadAttributes = condition.NewPreloadCondition[models.Phone](PhoneIdField, PhoneCreatedAtField, PhoneUpdatedAtField, PhoneDeletedAtField, PhoneNameField, PhoneBrandIdField)
var PhonePreloadRelations = []condition.Condition[models.Phone]{PhonePreloadBrand}
