// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	orm "github.com/ditrit/badaas/orm"
	models "github.com/ditrit/badaas/testintegration/models"
	"time"
)

func CountryId(operator orm.Operator[orm.UUID]) orm.WhereCondition[models.Country] {
	return orm.FieldCondition[models.Country, orm.UUID]{
		FieldIdentifier: orm.IDFieldID,
		Operator:        operator,
	}
}
func CountryCreatedAt(operator orm.Operator[time.Time]) orm.WhereCondition[models.Country] {
	return orm.FieldCondition[models.Country, time.Time]{
		FieldIdentifier: orm.CreatedAtFieldID,
		Operator:        operator,
	}
}
func CountryUpdatedAt(operator orm.Operator[time.Time]) orm.WhereCondition[models.Country] {
	return orm.FieldCondition[models.Country, time.Time]{
		FieldIdentifier: orm.UpdatedAtFieldID,
		Operator:        operator,
	}
}
func CountryDeletedAt(operator orm.Operator[time.Time]) orm.WhereCondition[models.Country] {
	return orm.FieldCondition[models.Country, time.Time]{
		FieldIdentifier: orm.DeletedAtFieldID,
		Operator:        operator,
	}
}

var countryNameFieldID = orm.FieldIdentifier{Field: "Name"}

func CountryName(operator orm.Operator[string]) orm.WhereCondition[models.Country] {
	return orm.FieldCondition[models.Country, string]{
		FieldIdentifier: countryNameFieldID,
		Operator:        operator,
	}
}
func CountryCapital(conditions ...orm.Condition[models.City]) orm.IJoinCondition[models.Country] {
	return orm.JoinCondition[models.Country, models.City]{
		Conditions:         conditions,
		RelationField:      "Capital",
		T1Field:            "ID",
		T1PreloadCondition: CountryPreloadAttributes,
		T2Field:            "CountryID",
	}
}

var CountryPreloadCapital = CountryCapital(CityPreloadAttributes)
var CountryPreloadAttributes = orm.NewPreloadCondition[models.Country](countryNameFieldID)
var CountryPreloadRelations = []orm.Condition[models.Country]{CountryPreloadCapital}
