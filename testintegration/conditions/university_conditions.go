// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	condition "github.com/ditrit/badaas/orm/condition"
	model "github.com/ditrit/badaas/orm/model"
	operator "github.com/ditrit/badaas/orm/operator"
	query "github.com/ditrit/badaas/orm/query"
	models "github.com/ditrit/badaas/testintegration/models"
	"reflect"
	"time"
)

var universityType = reflect.TypeOf(*new(models.University))
var UniversityIdField = query.FieldIdentifier[model.UUID]{
	Field:     "ID",
	ModelType: universityType,
}

func UniversityId(operator operator.Operator[model.UUID]) condition.WhereCondition[models.University] {
	return condition.NewFieldCondition[models.University, model.UUID](UniversityIdField, operator)
}

var UniversityCreatedAtField = query.FieldIdentifier[time.Time]{
	Field:     "CreatedAt",
	ModelType: universityType,
}

func UniversityCreatedAt(operator operator.Operator[time.Time]) condition.WhereCondition[models.University] {
	return condition.NewFieldCondition[models.University, time.Time](UniversityCreatedAtField, operator)
}

var UniversityUpdatedAtField = query.FieldIdentifier[time.Time]{
	Field:     "UpdatedAt",
	ModelType: universityType,
}

func UniversityUpdatedAt(operator operator.Operator[time.Time]) condition.WhereCondition[models.University] {
	return condition.NewFieldCondition[models.University, time.Time](UniversityUpdatedAtField, operator)
}

var UniversityDeletedAtField = query.FieldIdentifier[time.Time]{
	Field:     "DeletedAt",
	ModelType: universityType,
}

func UniversityDeletedAt(operator operator.Operator[time.Time]) condition.WhereCondition[models.University] {
	return condition.NewFieldCondition[models.University, time.Time](UniversityDeletedAtField, operator)
}

var UniversityNameField = query.FieldIdentifier[string]{
	Field:     "Name",
	ModelType: universityType,
}

func UniversityName(operator operator.Operator[string]) condition.WhereCondition[models.University] {
	return condition.NewFieldCondition[models.University, string](UniversityNameField, operator)
}

var UniversityPreloadAttributes = condition.NewPreloadCondition[models.University](UniversityIdField, UniversityCreatedAtField, UniversityUpdatedAtField, UniversityDeletedAtField, UniversityNameField)
