// Code generated by badaas-cli v0.0.0, DO NOT EDIT.
package conditions

import (
	condition "github.com/ditrit/badaas/orm/condition"
	model "github.com/ditrit/badaas/orm/model"
	operator "github.com/ditrit/badaas/orm/operator"
	query "github.com/ditrit/badaas/orm/query"
	models "github.com/ditrit/badaas/testintegration/models"
	"reflect"
	"time"
)

var parent1Type = reflect.TypeOf(*new(models.Parent1))
var Parent1IdField = query.FieldIdentifier[model.UUID]{
	Field:     "ID",
	ModelType: parent1Type,
}

func Parent1Id(operator operator.Operator[model.UUID]) condition.WhereCondition[models.Parent1] {
	return condition.NewFieldCondition[models.Parent1, model.UUID](Parent1IdField, operator)
}

var Parent1CreatedAtField = query.FieldIdentifier[time.Time]{
	Field:     "CreatedAt",
	ModelType: parent1Type,
}

func Parent1CreatedAt(operator operator.Operator[time.Time]) condition.WhereCondition[models.Parent1] {
	return condition.NewFieldCondition[models.Parent1, time.Time](Parent1CreatedAtField, operator)
}

var Parent1UpdatedAtField = query.FieldIdentifier[time.Time]{
	Field:     "UpdatedAt",
	ModelType: parent1Type,
}

func Parent1UpdatedAt(operator operator.Operator[time.Time]) condition.WhereCondition[models.Parent1] {
	return condition.NewFieldCondition[models.Parent1, time.Time](Parent1UpdatedAtField, operator)
}

var Parent1DeletedAtField = query.FieldIdentifier[time.Time]{
	Field:     "DeletedAt",
	ModelType: parent1Type,
}

func Parent1DeletedAt(operator operator.Operator[time.Time]) condition.WhereCondition[models.Parent1] {
	return condition.NewFieldCondition[models.Parent1, time.Time](Parent1DeletedAtField, operator)
}
func Parent1ParentParent(conditions ...condition.Condition[models.ParentParent]) condition.JoinCondition[models.Parent1] {
	return condition.NewJoinCondition[models.Parent1, models.ParentParent](conditions, "ParentParent", "ParentParentID", Parent1PreloadAttributes, "ID")
}

var Parent1PreloadParentParent = Parent1ParentParent(ParentParentPreloadAttributes)
var Parent1ParentParentIdField = query.FieldIdentifier[model.UUID]{
	Field:     "ParentParentID",
	ModelType: parent1Type,
}

func Parent1ParentParentId(operator operator.Operator[model.UUID]) condition.WhereCondition[models.Parent1] {
	return condition.NewFieldCondition[models.Parent1, model.UUID](Parent1ParentParentIdField, operator)
}

var Parent1PreloadAttributes = condition.NewPreloadCondition[models.Parent1](Parent1IdField, Parent1CreatedAtField, Parent1UpdatedAtField, Parent1DeletedAtField, Parent1ParentParentIdField)
var Parent1PreloadRelations = []condition.Condition[models.Parent1]{Parent1PreloadParentParent}
